# Generated by Django 2.2.4 on 2019-12-05 13:02

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AGReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('datetime_reported', models.DateTimeField()),
                ('datetime_uploaded', models.DateTimeField()),
                ('report_date', models.DateField()),
                ('county', models.CharField(max_length=50)),
                ('agrovet_name', models.CharField(max_length=100)),
                ('outlet_name', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=9, default=-1.2696984092022385, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=9, default=36.726427731756985, max_digits=12)),
                ('accuracy', models.DecimalField(decimal_places=1, default=1, max_digits=7)),
            ],
            options={
                'db_table': 'ag_reports',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('campaign_name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MaxLengthValidator(100, message='The campaign name must not be more than 100 characters'), django.core.validators.MinLengthValidator(3, message='The campaign name must be more than 3 chaaracters')])),
                ('recipients', models.CharField(blank=True, max_length=1000, null=True, validators=[django.core.validators.MaxLengthValidator(1000, message='The campaign recipients must not be more than 1000 characters')])),
                ('schedule_time', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100, message='The schedule time of the job expressed in the database')])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'campaigns',
            },
        ),
        migrations.CreateModel(
            name='FormViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('view_name', models.CharField(max_length=100, unique=True)),
                ('proper_view_name', models.CharField(max_length=100)),
                ('structure', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'form_views',
            },
        ),
        migrations.CreateModel(
            name='ImagesLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=50, unique=True)),
                ('species', models.CharField(max_length=50, null=True)),
                ('breed', models.CharField(max_length=50, null=True)),
                ('country', models.CharField(max_length=80, null=True)),
            ],
            options={
                'db_table': 'images_lookup',
            },
        ),
        migrations.CreateModel(
            name='MessageTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('template_name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MaxLengthValidator(100, message='The template name must be less than 100 characters')])),
                ('template_type', models.CharField(max_length=20, validators=[django.core.validators.MaxLengthValidator(20, message='The template type must be less than 20 characters')])),
                ('template', models.CharField(max_length=5000, validators=[django.core.validators.MaxLengthValidator(5000, message='The template to be sent must not be more than 5000 characters'), django.core.validators.MinLengthValidator(10, message='The template must be more than 3 characters')])),
                ('uuid', models.CharField(max_length=36, unique=True, validators=[django.core.validators.MaxLengthValidator(36, message='The template UUID can only be 36 characters'), django.core.validators.MinLengthValidator(36, message='The template UUID can only be 36 characters')])),
                ('is_active', models.BooleanField(default=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.Campaign')),
            ],
            options={
                'db_table': 's3ld_messagetemplates',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('model_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': '__models',
            },
        ),
        migrations.CreateModel(
            name='NDReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('datetime_reported', models.DateTimeField()),
                ('datetime_uploaded', models.DateTimeField()),
                ('county', models.CharField(max_length=50)),
                ('sub_county', models.CharField(max_length=50)),
                ('ward', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('latitude', models.DecimalField(decimal_places=9, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=9, max_digits=12)),
                ('accuracy', models.DecimalField(decimal_places=1, max_digits=7)),
                ('org_survey', models.CharField(max_length=50, null=True)),
                ('nd_date_started', models.DateField()),
                ('nd_date_reported', models.DateField()),
            ],
            options={
                'db_table': 'nd_reports',
            },
        ),
        migrations.CreateModel(
            name='ODKForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('form_id', models.IntegerField(unique=True)),
                ('form_name', models.CharField(max_length=200, unique=True)),
                ('full_form_id', models.CharField(max_length=200, unique=True)),
                ('structure', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('processed_structure', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('auto_update', models.BooleanField(default=False)),
                ('is_source_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'odkform',
            },
        ),
        migrations.CreateModel(
            name='Recipients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('salutation', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MaxLengthValidator(10, message='The salutation must be less than 10 characters')])),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.MaxLengthValidator(30, message='The first name must be less than 30 characters'), django.core.validators.RegexValidator(message='A name should only contain letters', regex="^[a-zA-Z']*$")])),
                ('other_names', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100, message='The other names must be less than 100 characters'), django.core.validators.RegexValidator(message='A name should only contain letters and/or a space', regex="^[a-zA-Z\\s'\\.]*$")])),
                ('nick_name', models.CharField(max_length=200, unique=True, validators=[django.core.validators.MaxLengthValidator(200, message='The nick names must be less than 100 characters'), django.core.validators.RegexValidator(message='A nick name should only contain letters and/or an underscore', regex='^[a-zA-Z_]*$')])),
                ('designation', models.CharField(max_length=100, validators=[django.core.validators.MaxLengthValidator(100, message='The recepient designation must be less than 100 characters'), django.core.validators.RegexValidator(message='A nick name should only contain letters and/or an underscore', regex='^[a-zA-Z_]*$')])),
                ('cell_no', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(15, message='The recepient phone number must not be more than 15 characters long'), django.core.validators.RegexValidator(message='The phone number should be in the format +1xxxxxxxxxxx with no spaces', regex='^\\+\\d+$')])),
                ('alternative_cell_no', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.MaxLengthValidator(15, message='The recepient alternative phone number must not be more than 15 characters long'), django.core.validators.RegexValidator(message='The phone number should be in the format +1xxxxxxxxxxx with no spaces', regex='^\\+\\d+$')])),
                ('recipient_email', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100, message='The recepient email must not be more than 100 characters')])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'recipients',
            },
        ),
        migrations.CreateModel(
            name='SHReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('datetime_reported', models.DateTimeField()),
                ('datetime_uploaded', models.DateTimeField()),
                ('report_date', models.DateField(default='2018-01-01')),
                ('county', models.CharField(max_length=50)),
                ('abattoir', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=9, default=-1.2696984092022385, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=9, default=36.726427731756985, max_digits=12)),
                ('accuracy', models.DecimalField(decimal_places=1, default=1, max_digits=7)),
                ('reporter', models.CharField(max_length=50)),
                ('animal_source', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'sh_reports',
            },
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_county_name', models.CharField(max_length=200, unique=True)),
                ('nick_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 's3ld_subcounty',
            },
        ),
        migrations.CreateModel(
            name='SyndromicIncidences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('datetime_reported', models.DateTimeField()),
                ('datetime_uploaded', models.DateTimeField()),
                ('county', models.CharField(max_length=50)),
                ('sub_county', models.CharField(max_length=50)),
                ('ward', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('reporter', models.CharField(max_length=50)),
                ('latitude', models.DecimalField(decimal_places=9, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=9, max_digits=12)),
                ('accuracy', models.DecimalField(decimal_places=1, max_digits=7)),
                ('no_cases', models.IntegerField()),
            ],
            options={
                'db_table': 'syndromic_incidences',
            },
        ),
        migrations.CreateModel(
            name='VillageMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('village_code', models.CharField(max_length=50)),
                ('ward_code', models.CharField(max_length=50)),
                ('village_name', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=9, max_digits=11, null=True)),
                ('longitude', models.DecimalField(decimal_places=9, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'village_mapping',
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward_name', models.CharField(max_length=200)),
                ('nick_name', models.CharField(max_length=100, unique=True)),
                ('sub_county', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.SubCounty')),
            ],
            options={
                'db_table': 's3ld_ward',
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('village_name', models.CharField(max_length=200)),
                ('nick_name', models.CharField(max_length=100, unique=True)),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.Ward')),
            ],
            options={
                'db_table': 's3ld_village',
            },
        ),
        migrations.CreateModel(
            name='ViewTablesLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('table_name', models.CharField(max_length=250, unique=True)),
                ('proper_table_name', models.CharField(max_length=250, null=True)),
                ('hashed_name', models.CharField(max_length=100, unique=True)),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.FormViews')),
            ],
            options={
                'db_table': 'views_table_lookup',
            },
        ),
        migrations.CreateModel(
            name='ViewsData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.FormViews')),
            ],
            options={
                'db_table': 'views_data',
            },
        ),
        migrations.CreateModel(
            name='SyndromicDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('species', models.CharField(max_length=20)),
                ('syndrome', models.CharField(max_length=1000)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('herd_size', models.IntegerField()),
                ('no_sick', models.IntegerField()),
                ('no_dead', models.IntegerField()),
                ('prov_diagnosis', models.CharField(max_length=1000)),
                ('clinical_signs', models.CharField(max_length=1000)),
                ('incidence', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.SyndromicIncidences')),
            ],
            options={
                'db_table': 'syndromic_details',
            },
        ),
        migrations.CreateModel(
            name='SMSQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('message', models.CharField(max_length=1000, validators=[django.core.validators.MaxLengthValidator(1000, message='The message to be sent must not be more than 1000 characters')])),
                ('recipient_no', models.CharField(max_length=15, validators=[django.core.validators.MaxLengthValidator(15, message='The recepient number must not be more than 15 characters long')])),
                ('msg_status', models.CharField(max_length=50, validators=[django.core.validators.MaxLengthValidator(50, message='The status must not be more than 15 characters long')])),
                ('provider_id', models.CharField(blank=True, max_length=100, null=True)),
                ('schedule_time', models.DateTimeField()),
                ('in_queue', models.BooleanField(default=0)),
                ('queue_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('delivery_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.Recipients')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.MessageTemplates')),
            ],
            options={
                'db_table': 'sms_queue',
            },
        ),
        migrations.CreateModel(
            name='SHSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('specie', models.CharField(max_length=50)),
                ('no_slaughtered', models.IntegerField()),
                ('no_condemned', models.IntegerField()),
                ('sh_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.SHReport')),
            ],
            options={
                'db_table': 'sh_species',
            },
        ),
        migrations.CreateModel(
            name='SHParts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('body_part', models.CharField(max_length=50)),
                ('lesions', models.CharField(max_length=1000)),
                ('no_condemned', models.IntegerField()),
                ('sample_collected', models.BooleanField(default=False)),
                ('sh_specie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.SHSpecies')),
            ],
            options={
                'db_table': 'sh_body_parts',
            },
        ),
        migrations.AddField(
            model_name='recipients',
            name='sub_county',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.SubCounty'),
        ),
        migrations.AddField(
            model_name='recipients',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.Village'),
        ),
        migrations.AddField(
            model_name='recipients',
            name='ward',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.Ward'),
        ),
        migrations.CreateModel(
            name='RawSubmissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('submission_time', models.CharField(max_length=100)),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.ODKForm')),
            ],
            options={
                'db_table': 'raw_submissions',
            },
        ),
        migrations.CreateModel(
            name='NDDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('disease', models.CharField(max_length=1000)),
                ('species', models.CharField(max_length=30)),
                ('diagnosis_type', models.CharField(max_length=50)),
                ('production_system', models.CharField(max_length=30)),
                ('is_zoonotic', models.BooleanField(blank=True, null=True)),
                ('no_risk', models.IntegerField()),
                ('no_sick', models.IntegerField()),
                ('no_dead', models.IntegerField()),
                ('no_slaughtered', models.IntegerField(null=True)),
                ('measure_taken', models.CharField(max_length=30)),
                ('no_vaccinated', models.IntegerField(null=True)),
                ('nd_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.NDReport')),
            ],
            options={
                'db_table': 'nd_details',
            },
        ),
        migrations.AddField(
            model_name='formviews',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.ODKForm'),
        ),
        migrations.CreateModel(
            name='DictionaryItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('form_id', models.IntegerField()),
                ('t_key', models.CharField(max_length=100)),
                ('t_locale', models.CharField(max_length=50)),
                ('t_type', models.CharField(max_length=30)),
                ('t_value', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'dictionary_items',
                'unique_together': {('form_id', 't_key')},
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('_name', models.CharField(max_length=100)),
                ('_type', models.CharField(max_length=50)),
                ('_size', models.SmallIntegerField()),
                ('_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.Model')),
            ],
            options={
                'db_table': '__attributes',
            },
        ),
        migrations.CreateModel(
            name='AGDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('syndrome', models.CharField(max_length=150)),
                ('syndrome_start_date', models.DateField()),
                ('drug_sold', models.CharField(max_length=150)),
                ('drug_quantity', models.CharField(max_length=50)),
                ('farmer_location', models.CharField(max_length=150)),
                ('ag_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='livhealth_scripts.AGReport')),
            ],
            options={
                'db_table': 'ag_detail',
            },
        ),
    ]
